// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId      String       @id @default(uuid())
  username    String       @unique
  email       String       @unique
  password    String
  profileIm   String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  hikingPosts HikingPost[]
  comments    Comment[]
  reports     Report[]
  reviews     Review[]
}

model HikingPost {
  postId      String    @id @default(uuid())
  user        User?     @relation(fields: [userId], references: [userId])
  userId      String?
  title       String
  content     String
  imageUrl    String[]
  comments    Comment[]
  voteCounter Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reports     Report[]
}

model Comment {
  commentId  String     @id @default(uuid())
  user       User?      @relation(fields: [userId], references: [userId])
  userId     String?
  postId     String
  comment    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  hikingPost HikingPost @relation(fields: [postId], references: [postId])
}

model Report {
  reportId      String      @id @default(uuid())
  user          User?       @relation(fields: [userId], references: [userId])
  userId        String?
  hikingPost    HikingPost? @relation(fields: [postId], references: [postId])
  postId        String?
  reportTitle   String
  reportContent String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Trail {
  trailId           String   @id @default(uuid())
  trailName         String
  trailLat          String?
  trailLng          String?
  trailLocation     String?
  trailType         String
  trailDifficulty   String
  trailLength       String
  estimatedDuration String
  trailDescription  String
  amenities         String[]
  trailImagesUrl    String[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  reviews           Review[]
}

model Review {
  reviewId      String   @id @default(uuid())
  trail         Trail?   @relation(fields: [trailId], references: [trailId])
  trailId       String?
  user          User?    @relation(fields: [userId], references: [userId])
  userId        String?
  reviewTitle   String
  reviewContent String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
